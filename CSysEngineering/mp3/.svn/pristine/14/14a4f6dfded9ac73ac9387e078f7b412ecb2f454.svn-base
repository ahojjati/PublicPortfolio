//Header file for terminal driver
#ifndef _TERMINAL_H
#define _TERMINAL_H

#include "lib.h"
#include "types.h"
#include "pcb_struct.h"
#include "i8259.h"
#include "file_sys.h"

#define SCREEN_SIZE NUM_COLS * NUM_ROWS
#define VMEM_START VIDEO
#define VMEM_END VIDEO + SCREEN_SIZE
#define BUFFER_SIZE 128
#define VIDEO_0 0x1000
#define VIDEO_1 0x2000
#define VIDEO_2 0x4000
#define NUM_TERM	3

#ifndef ASM

extern term_t* curr_terminal;
extern term_t terminal[NUM_TERM];

int32_t terminal_read(int32_t fd, void * buf, int32_t nbytes);

int32_t terminal_write(int32_t fd, const void * buf, int32_t nbytes);

int32_t terminal_open();

int32_t terminal_close();

void copy_vid_to_storage(term_t* terminal);

void clear_screen();

void print_line_header(void);

void general_scroll(void);

void clear_line_buffer();

int line_buffer_delete(term_t* terminal);

void terminal_read_test(void);

void terminal_write_test(void);

void screen_delete(term_t* terminal);

void newline(uint8_t script);

void equate_buf();

void terminal_change(int terminal_num);

void init_terminals();

void storage_addchar(uint8_t c);

void clear_storage(term_t* terminal);

void copy_storage_to_vid(term_t* terminal);

void storage_delete_char(term_t* terminal);

void screen_add_char(uint8_t c,term_t* terminal);

void storage_add_char(uint8_t c, term_t* terminal);

int line_buffer_add(uint8_t c,term_t* terminal);

/******Functions below are not implemented yet******/

int32_t scroll_up(void);

int32_t scroll_down(void);

#endif /* ASM */

#endif /* TERMINAL_H */
